<<<<<<< HEAD
var express = require('express');var router = express.Router();var moment= require('moment');var formidable = require('formidable');var path = require('path');var staffInfo = require('../models/staffinfo');var reviewDate=require('../models/reviewdates');var appraisal = require('../models/appraisal');var email   = require('emailjs/email');var finder = require('../models/finder');var gatepass = require('../models/gatepass');var sdf = require('../models/sdf');var fs = require('fs');var appraisalyear1=moment().year();var appraisalyear2=appraisalyear1-1;var current_year= appraisalyear2+ "-"+appraisalyear1;var qr = require('qr-image');  router.get('/qrcode', function(req, res) {   var name="rajesh";  var clz="Aditya engineering college";  var qrdata='name:'+name+'\n'+'college:'+clz;  var code = qr.image(qrdata, { type: 'png' });  res.type('png');  code.pipe(res);});/* GET home page. */router.get('/', function(req, res, next) {  res.render('index', { title: 'Express' });});router.get('/login',function(req,res){  if(req.session && req.session.user){    res.locals.user = req.session.user;    res.redirect('dashbord');  }  else{    req.session.reset();    res.render('login');  }});router.get('/reviewdate',function(req,res){res.render('date');});//router.get('/appraisal1',function(req,res){res.render('appraisel_st1');});router.get('/appraisal2',function(req,res){res.render('appraisel_st2');});router.get('/appraisal3',function(req,res){res.render('appraisel_st3');});//update experiencerouter.post('/experience',function(req,res){  console.log(JSON.stringify(req.body));  staffInfo.updateExperience(req.session.user.PinNo,req.body,function(err,docs){    if(err) return err;    else      res.send('success');      });  });//update scopus publicationsrouter.post('/scopus',function(req,res){  console.log(JSON.stringify(req.body));  staffInfo.updateScopus(req.session.user.PinNo,req.body,function(err,docs){    if(err) return err;    else      res.send('success');      });  });router.post('/national',function(req,res){  console.log(JSON.stringify(req.body));  staffInfo.updateNational(req.session.user.PinNo,req.body,function(err,docs){    if(err) return err;    else      res.send('success');      });  });router.post('/reputed',function(req,res){  console.log(JSON.stringify(req.body));  staffInfo.updateReputed(req.session.user.PinNo,req.body,function(err,docs){    if(err) return err;    else      res.send('success');      });  });router.post('/journal',function(req,res){  console.log(JSON.stringify(req.body));  staffInfo.updateJournal(req.session.user.PinNo,req.body,function(err,docs){    if(err) return err;    else      res.send('success');      });  });router.post('/chapter',function(req,res){  console.log(JSON.stringify(req.body));  staffInfo.updateChapter(req.session.user.PinNo,req.body,function(err,docs){    if(err) return err;    else      res.send('success');      });  });function updateEducation(sf,data) {  staffInfo.updateFile(sf,data,function(err){        console.log(err);      });}router.post('/uped',function(req,res){if(req.body.SSC){  var da=JSON.parse(req.body.SSC);  var data={              "SSC.YearOfPass":da.YearOfPass,               "SSC.Institution":da.Institution            };  updateEducation(req.session.user.PinNo,data);}else if(req.body.Inter){  var da=JSON.parse(req.body.Inter);  var data={              "Inter.YearOfPass":da.YearOfPass,               "Inter.Institution":da.Institution            };  updateEducation(req.session.user.PinNo,data);}if(req.body.UG){  var da=JSON.parse(req.body.UG);   var data={              "UG.YearOfPass":da.YearOfPass,               "UG.Institution":da.Institution            }; updateEducation(req.session.user.PinNo,data);}if(req.body.PG){  var da=JSON.parse(req.body.PG);   var data={              "PG.YearOfPass":da.YearOfPass,               "PG.Institution":da.Institution            }; updateEducation(req.session.user.PinNo,data);}if(req.body.PHD){  var da=JSON.parse(req.body.PHD);   var data={              "PHD.YearOfPass":da.YearOfPass,               "PHD.Institution":da.Institution            }; updateEducation(req.session.user.PinNo,data);}if(req.body.Other){  var da=JSON.parse(req.body.Other);   var data={              "Other.YearOfPass":da.YearOfPass,               "Other.Institution":da.Institution            }; updateEducation(req.session.user.PinNo,data);}if(req.body.Passportdetails){  var da=JSON.parse(req.body.Passportdetails);  console.log(da);  var data={Passportdetails:da};  updateEducation(req.session.user.PinNo,data); }});router.get('/edt',function(req,res){res.render('ed');});router.post('/updatemydata',function(req,res){  console.log(JSON.stringify(req.body));  staffInfo.updateMydata(req.session.user.StaffCode,req.body,function(err,docs){    if(err) return err;      });  res.send('success');});//loginrouter.post('/login',function(req,res){  staffInfo.getUser(req.body.username,req.body.password,function(err,user){    if(!user){      res.render('login', { error: 'Invalid username or password.' });    }     else{        delete user.Password;        req.session.user = user;        res.redirect('/dashbord');      }  });});//LOGOUTrouter.get('/logout', function(req, res){  req.session.reset();  res.redirect('/login');});//dashboard after loginrouter.get('/dashbord',function(req,res){  if(req.session && req.session.user){    res.locals.user = req.session.user;    res.render('dashboard');  }  else{    req.session.reset();    res.redirect('login');  }});// mydatarouter.get('/mydata',function(req,res){  if (req.session && req.session.user){      var data={};     staffInfo.getUserDetails(req.session.user.StaffCode,function(err,docs){      if(err) return err;      else{        res.locals.user =docs;       res.render('mydata');  }     });    // console.log(data);     }  else    res.redirect('login');});router.get('/mypolicy',function(req,res){  if (req.session && req.session.user){    res.locals.user = req.session.user;    res.render('mypolicy');  }  else    res.redirect('login');});router.get('/mycampus',function(req,res){  if (req.session && req.session.user){    res.locals.user = req.session.user;    finder.getFacultyDetails(function(err,docs){    if(err)     console.log(err);    else    {    var finderdata=docs;    var data={};    if (req.session.user.Role=='HOD') {    var data={      College:req.session.user.College,      Department:req.session.user.DepartmentName,      Role:'staff'    };}    else if (req.session.user.Role=='principal') {    var data={      College:req.session.user.College    };}  gatepass.getDetails(data,function(err,docs){    if(err)     console.log(err);    else      res.render('mycampus',{staffdetails:finderdata,gatepassdetails:docs,user:req.session.user});    });  }    });          }  else    res.redirect('login');});router.post('/gatepasssubmit',function(req,res){  var data={    Name:req.session.user.StaffName,    Code:req.session.user.StaffCode,    Designation:req.session.user.DesignationName,    College:req.session.user.College,    Department:req.session.user.DepartmentName,    Date:req.body.gpdate,    Time:req.body.gptime,    Reason:req.body.gpreason,    Role:req.session.user.Role,    Email:req.session.user.Email  };  gatepass.setDetails(data,function(err,docs){    if(err)      console.log(err);    else     // console.log(docs);    res.redirect('/dashbord');  });});router.get('/myfinance',function(req,res){  if (req.session && req.session.user){    res.locals.user = req.session.user;    var data=req.session.user.StaffCode;    sdf.getDetails(data,function(err,docs){    if(err)     console.log(err);    else     res.render('myfinance',{userr:docs});    });  }  else    res.redirect('login');});router.post('/sdfsubmit',function(req,res){    var data={    StaffName:req.session.user.StaffName,    FathersName:req.body.fname,    Gender:req.session.user.Sex,    DateOfBirth:req.session.user.DateOfBirth,    Pan:req.session.user.PanGirNo,    PinNo:req.session.user.PinOrZipCode,    Code:req.session.user.StaffCode,    BuildingName:req.body.bname,    Dno:req.body.dno,    Street:req.body.sname,    City:req.session.user.City,    MobileNo:req.session.user.MobileNo,    Lif:req.body.lip,    Hif:req.body.hip,    Ppf:req.body.ppf,    Ihl:req.body.ihl,    Phl:req.body.phl,    TutionFee:req.body.tf,    Insc:req.body.ins,    Iel:req.body.iel,    Aoi:req.body.aoi,    HouseType:req.body.ht,    MonthlyRent:req.body.mrp,    PreviousSalary:req.body.npsd,    IncomeFromHouse:req.body.ihp,    OtherIncome:req.body.oi,    LoanBuildingName:req.body.lbname,    LoanDno:req.body.ldno,    LoanStreet:req.body.lst,    LoanCity:req.body.lcity,    LoanPin:req.body.lpno,    Place:req.body.lpname,    Date:req.body.dt,    Time:req.body.gptime,        Email:req.session.user.Email  };  var Code = req.session.user.StaffCode;  sdf.setDetails(Code,data,function(err,docs){    if(err)      console.log(err);  });  res.redirect('/myfinance');  });router.get('/mycareer',function(req,res){  if (req.session && req.session.user) {    res.locals.user = req.session.user;    if(res.locals.user.DesignationName!='Vice-Chairman'){      reviewDate.getReviewDates(function(err,dates){        if(err)         res.render('mycareer');        else{         var dt = moment(dates.vcdate,"DD-MM-YYYY").year();        //var dt=2016;         var current_date=moment().year();         if(dt==current_date){          res.render('mycareer',{dates:dates});         }         else{         res.render('mycareer',{notstarted:'appraisal not at started'});          }        }            });    }    else{      var aec,aect,ace,hodsdata;      var data={        Role:'staff',        status:'principalApproved',        Appraisalyear:current_year      }            console.log(data);      appraisal.getAecStaffAppraisalsForVc(data,function(err,aecfac){          if(err)            console.log(err);          else{             aec=aecfac;           //console.log(aec);            appraisal.getAcetStaffAppraisalsForVc(data,function(err,aectfac){            if(err)              console.log(err);            else{              acet=aectfac;              appraisal.getAceStaffAppraisalsForVc(data,function(err,acefac){                console.log(acefac);                if(err)                  console.log(err);                else{                  ace=acefac;                  console.log(ace);                 // console.log({aec:aec,acet:acet,ace:ace});                                    datahod={                     Role:'HOD',                     PrincipalReview:'principalApproved',                     Appraisalyear:current_year };                                    appraisal.getAecHodAppraisalsForVc(datahod,function(err,aechods){                    if (err)                      console.log(err);                    else{                       // console.log(hodsdata);                        appraisal.getAcetHodAppraisalsForVc(datahod,function(err,acethods){                          if(err)                            console.log(err);                          else{                           // hodsdata +=acethods;                            appraisal.getAceHodAppraisalsForVc(datahod,function(err,acehods){                              if(err)                                console.log(err);                              else{                                hodsdata={aec:aechods,acet:acethods,ace:acehods};                                                            console.log(hodsdata);                              res.render('vcpannel',{aec:aec,acet:acet,ace:ace,hodsdata:hodsdata});                            }                            });                          }                        });                    }                  });                                  }              });            }          });      }    });           }  }  else    res.redirect('login');});router.post('/reviewdate',function(req,res){console.log(req.body.vcdate);console.log(req.body.principal);console.log(req.body.hoddate);console.log(req.body.facultydate); var vc_date=req.body.vcdate; var principal_date=moment(req.body.principal).format('DD/MM/YYYY');  var hod_date=moment(req.body.hoddate).format('DD/MM/YYYY'); var faculty_date=moment(req.body.facultydate).format('DD/MM/YYYY');  reviewDate.setReviewDate(vc_date,principal_date,hod_date,faculty_date,function(err,user){  console.log(err);});});router.post('/upload/:pr', function(req, res){  // create an incoming form object  var form = new formidable.IncomingForm();  // specify that we want to allow the user to upload multiple files in a single request  form.multiples = true;  // store all uploads in the /uploads directory    var db=req.db;  var stinfo =db.get('staffinfo');      if(req.params.pr== 1)    form.uploadDir = path.join(__dirname,'../public/uploads/bank');  else if(req.params.pr== 2)    form.uploadDir = path.join(__dirname,'../public/uploads/adhar');  else if(req.params.pr== 3)    form.uploadDir = path.join(__dirname,'../public/uploads/passport');  else if(req.params.pr== 4)    form.uploadDir = path.join(__dirname,'../public/uploads/ssc');  else if(req.params.pr== 5)    form.uploadDir = path.join(__dirname,'../public/uploads/inter');  else if(req.params.pr== 6)    form.uploadDir = path.join(__dirname,'../public/uploads/ug');  else if(req.params.pr== 7)    form.uploadDir = path.join(__dirname,'../public/uploads/pg');  else if(req.params.pr== 8)    form.uploadDir = path.join(__dirname,'../public/uploads/phd');  else if(req.params.pr== 9)    form.uploadDir = path.join(__dirname,'../public/uploads/other_education');  else if(req.params.pr== 10)    form.uploadDir = path.join(__dirname,'../public/uploads/pancard');  // every time a file has been uploaded successfully,  // rename it to it's orignal name  form.on('file', function(field, file) {    var fileType = file.name.split('.').pop();    var name=req.session.user._id+'.'+fileType;    fs.rename(file.path, path.join(form.uploadDir,name));    if(req.params.pr== 1){      var bank={"bank":"uploads/bank/"+name};      staffInfo.updateFile(req.session.user.PinNo,bank,function(err){        console.log(err);      });       }    else if(req.params.pr== 2){      var adhar={"adhar":"uploads/adhar/"+name};      staffInfo.updateFile(req.session.user.PinNo,adhar,function(err){        console.log(err);      });    }         else if(req.params.pr== 3){       var passport={"passport":"uploads/passport/"+name};      staffInfo.updateFile(req.session.user.PinNo,passport,function(err){        console.log(err);      });    }     else if(req.params.pr== 4){       var ssc={"SSC.Certificate":"uploads/ssc/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }    else if(req.params.pr== 5){       var ssc={"Inter.Certificate":"uploads/inter/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }    else if(req.params.pr== 6){       var ssc={"UG.Certificate":"uploads/ug/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }    else if(req.params.pr== 7){       var ssc={"PG.Certificate":"uploads/pg/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }    else if(req.params.pr== 8){       var ssc={"PHD.Certificate":"uploads/phd/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }    else if(req.params.pr== 9){       var ssc={"Other.Certificate":"uploads/other_education/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }    else if(req.params.pr== 10){       var pancard={"pancard":"uploads/pancard/"+name};      staffInfo.updateFile(req.session.user.PinNo,pancard,function(err){        console.log(err);      });    }});      // log any errors that occur  form.on('error', function(err) {    console.log('An error has occured: \n' + err);  });  // once all the files have been uploaded, send a response to the client  form.on('end', function() {    res.end('success');  });  // parse the incoming request containing the form data  form.parse(req);});router.get('/email',function(req,res,next){  var server  = email.server.connect({   user:    "seendripu.rajesh@gmail.com",    password:"r1j51910",    host:    "smtp.gmail.com",    ssl:     true});    var name="rajesh";  var clz="Aditya engineering college";  var qrdata='name:'+name+'\n'+'college:'+clz;  var code = qr.image(qrdata, { type: 'svg' })// send the message and get a callback with an error or details of the message that was sent/*server.send({   text:    "i hope this works",    from:    "rajesh seendripu <seendripu.rajesh@gmail.com>",    to:      "rajesh.cme123@gmail,comsrikala561@gmail.com,",   cc:      " ",   subject: "testing emailjs"}, function(err, message) { console.log(err || message); });*/var data='hai this is  rajesh from myhub';var msg="<html><body><img id='barcode' src='https://api.qrserver.com/v1/create-qr-code/?data="+data+"&amp;size=250x250'title='HELLO' width='100' height='100' /></body></html>";var message = {   text:    "Do not respond to this mail it is  for just testing purpose",    from:    "rajesh seendripu<seendripu.rajesh@gmail.com>",    to:      "rajesh.cme123@gmail.com,srikala561@gmail.com",   cc:      "",   subject: "Testing my code for sending html email",   attachment:    [      {data:msg, alternative:true},      {path:"C:/Users/Admin/Desktop/file/rj.html", type:"application/html", name:"rj.html"}         ]};// send the message and get a callback with an error or details of the message that was sentserver.send(message, function(err, message) { console.log(err || message);if(!err)   res.sendStatus(200); });});router.get('/pdfgen',function(req,res){ res.render('pdf');});router.post('/getdetails',function(req,res){  finder.getFacultyDetails(function(err,docs){    res.send(docs);      });  });module.exports = router;
=======
var express = require('express');var router = express.Router();var moment= require('moment');var formidable = require('formidable');var path = require('path');var staffInfo = require('../models/staffinfo');var reviewDate=require('../models/reviewdates');var appraisal = require('../models/appraisal');var email   = require('emailjs/email');var fs = require('fs');var current_date=moment().year();/* GET home page. */router.get('/', function(req, res, next) {  res.render('index', { title: 'Express' });});router.get('/login',function(req,res){  res.render('login');});router.get('/reviewdate',function(req,res){res.render('date');});//router.get('/appraisal1',function(req,res){res.render('appraisel_st1');});router.get('/appraisal2',function(req,res){res.render('appraisel_st2');});router.get('/appraisal3',function(req,res){res.render('appraisel_st3');});//router.post('/getdata',function(req,res){  console.log(JSON.stringify(req.body));  res.send('hai');});function updateEducation(sf,data) {  staffInfo.updateFile(sf,data,function(err){        console.log(err);      });}router.post('/uped',function(req,res){if(req.body.SSC){  var da=JSON.parse(req.body.SSC);  var data={              "SSC.YearOfPass":da.YearOfPass,               "SSC.Institution":da.Institution            };  updateEducation(req.session.user.PinNo,data);}else if(req.body.Inter){  var da=JSON.parse(req.body.Inter);  var data={              "Inter.YearOfPass":da.YearOfPass,               "Inter.Institution":da.Institution            };  updateEducation(req.session.user.PinNo,data);}if(req.body.UG){  var da=JSON.parse(req.body.UG);   var data={              "UG.YearOfPass":da.YearOfPass,               "UG.Institution":da.Institution            }; updateEducation(req.session.user.PinNo,data);}if(req.body.PG){  var da=JSON.parse(req.body.PG);   var data={              "PG.YearOfPass":da.YearOfPass,               "PG.Institution":da.Institution            }; updateEducation(req.session.user.PinNo,data);}});/*router.get('/edt',function(req,res){res.render('ed');});router.post('/edtd',function(req,res){  console.log(JSON.stringify(req.body));  res.send('hai');});*///loginrouter.post('/login',function(req,res){  staffInfo.getUser(req.body.username,req.body.password,function(err,user){    if(!user){      res.render('login', { error: 'Invalid username or password.' });    }     else{        delete user.Password;        req.session.user = user;        res.redirect('/dashbord');      }  });});//LOGOUTrouter.get('/logout', function(req, res){  req.session.reset();  res.redirect('/login');});//dashboard after loginrouter.get('/dashbord',function(req,res){  if(req.session && req.session.user){    res.locals.user = req.session.user;    res.render('dashboard');  }  else{    req.session.reset();    res.redirect('login');  }});// mydatarouter.get('/mydata',function(req,res){  if (req.session && req.session.user){    res.locals.user = req.session.user;    res.render('mydata');  }  else    res.redirect('login');});router.get('/mypolicy',function(req,res){  if (req.session && req.session.user){    res.locals.user = req.session.user;    res.render('mypolicy');  }  else    res.redirect('login');});router.get('/mycampus',function(req,res){  if (req.session && req.session.user){    res.locals.user = req.session.user;    res.render('mycampus');  }  else    res.redirect('login');});router.get('/myfinance',function(req,res){  if (req.session && req.session.user){    res.locals.user = req.session.user;    res.render('myfinance');  }  else    res.redirect('login');});router.get('/mycareer',function(req,res){  if (req.session && req.session.user) {    res.locals.user = req.session.user;    if(res.locals.user.DesignationName!='Vice-Chairman'){      reviewDate.getReviewDates(function(err,dates){        if(err)         res.render('mycareer');        else{         var dt = moment(dates.vcdate,"DD-MM-YYYY").year();        //var dt=2016;         var current_date=moment().year();         if(dt==current_date){          res.render('mycareer',{dates:dates});         }         else{         res.render('mycareer',{notstarted:'appraisal not at started'});          }        }            });    }    else{      var aec,aect,ace,hodsdata;      var data={        Role:'staff',        PrincipalReview:'false',        AppraisalYear:current_date      }            appraisal.getAecStaffAppraisalsForVc(data,function(err,aecfac){          if(err)            console.log(err);          else{             aec=aecfac;           // console.log(aec);            appraisal.getAcetStaffAppraisalsForVc(data,function(err,aectfac){            if(err)              console.log(err);            else{              acet=aectfac;              appraisal.getAceStaffAppraisalsForVc(data,function(err,acefac){                if(err)                  console.log(err);                else{                  ace=acefac;                  console.log({aec:aec,acet:acet,ace:ace});                                    datahod={                     Role:'HOD',                     PrincipalReview:'false',                     AppraisalYear:current_date };                                    appraisal.getAecHodAppraisalsForVc(datahod,function(err,aechods){                    if (err)                      console.log(err);                    else{                       // console.log(hodsdata);                        appraisal.getAcetHodAppraisalsForVc(datahod,function(err,acethods){                          if(err)                            console.log(err);                          else{                           // hodsdata +=acethods;                            appraisal.getAceHodAppraisalsForVc(datahod,function(err,acehods){                              if(err)                                console.log(err);                              else{                                hodsdata={aec:aechods,acet:acethods,ace:acehods};                                                            console.log(hodsdata);                              res.render('vcpannel',{aec:aec,acet:acet,ace:ace,hodsdata:hodsdata});                            }                            });                          }                        });                    }                  });                                  }              });            }          });      }    });           }  }  else    res.redirect('login');});router.post('/reviewdate',function(req,res){console.log(req.body.vcdate);console.log(req.body.principal);console.log(req.body.hoddate);console.log(req.body.facultydate); var vc_date=req.body.vcdate; var principal_date=moment(req.body.principal).format('DD/MM/YYYY');  var hod_date=moment(req.body.hoddate).format('DD/MM/YYYY'); var faculty_date=moment(req.body.facultydate).format('DD/MM/YYYY');  reviewDate.setReviewDate(vc_date,principal_date,hod_date,faculty_date,function(err,user){  console.log(err);});});router.post('/upload/:pr', function(req, res){  // create an incoming form object  var form = new formidable.IncomingForm();  // specify that we want to allow the user to upload multiple files in a single request  form.multiples = true;  // store all uploads in the /uploads directory    var db=req.db;  var stinfo =db.get('staffinfo');      if(req.params.pr== 1)    form.uploadDir = path.join(__dirname,'../public/uploads/bank');  else if(req.params.pr== 2)    form.uploadDir = path.join(__dirname,'../public/uploads/adhar');  else if(req.params.pr== 3)    form.uploadDir = path.join(__dirname,'../public/uploads/passport');  else if(req.params.pr== 4)    form.uploadDir = path.join(__dirname,'../public/uploads/ssc');  else if(req.params.pr== 5)    form.uploadDir = path.join(__dirname,'../public/uploads/inter');  else if(req.params.pr== 6)    form.uploadDir = path.join(__dirname,'../public/uploads/ug');  else if(req.params.pr== 7)    form.uploadDir = path.join(__dirname,'../public/uploads/pg');  // every time a file has been uploaded successfully,  // rename it to it's orignal name  form.on('file', function(field, file) {    var fileType = file.name.split('.').pop();    var name=req.session.user._id+'.'+fileType;    fs.rename(file.path, path.join(form.uploadDir,name));    if(req.params.pr== 1){      var bank={"bank":"uploads/bank/"+name};      staffInfo.updateFile(req.session.user.PinNo,bank,function(err){        console.log(err);      });       }    else if(req.params.pr== 2){      var adhar={"adhar":"uploads/adhar/"+name};      staffInfo.updateFile(req.session.user.PinNo,adhar,function(err){        console.log(err);      });    }         else if(req.params.pr== 3){       var passport={"passport":"uploads/passport/"+name};      staffInfo.updateFile(req.session.user.PinNo,passport,function(err){        console.log(err);      });    }     else if(req.params.pr== 4){       var ssc={"SSC.Certificate":"uploads/ssc/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }    else if(req.params.pr== 5){       var ssc={"Inter.Certificate":"uploads/inter/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }    else if(req.params.pr== 6){       var ssc={"UG.Certificate":"uploads/ug/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }    else if(req.params.pr== 7){       var ssc={"PG.Certificate":"uploads/pg/"+name};      staffInfo.updateFile(req.session.user.PinNo,ssc,function(err){        console.log(err);      });    }});      // log any errors that occur  form.on('error', function(err) {    console.log('An error has occured: \n' + err);  });  // once all the files have been uploaded, send a response to the client  form.on('end', function() {    res.end('success');  });  // parse the incoming request containing the form data  form.parse(req);});router.get('/email',function(req,res,next){  var server  = email.server.connect({   user:    "seendripu.rajesh@gmail.com",    password:"r1j51910",    host:    "smtp.gmail.com",    ssl:     true});// send the message and get a callback with an error or details of the message that was sent/*server.send({   text:    "i hope this works",    from:    "rajesh seendripu <seendripu.rajesh@gmail.com>",    to:      "rajesh.cme123@gmail.com",   cc:      " ",   subject: "testing emailjs"}, function(err, message) { console.log(err || message); });*/var msg="<html><body><table border='0' cellpadding='0' cellspacing='0' width='160' style='background-color:#FFFFFF; border:1px solid #CCCCCC;'<tr><td align='left' valign='top' style='padding:5px;'><table border='0' cellpadding='0' cellspacing='0' width='100%'><tr><td align='center' valign='top' style='background-color:#2C9AB7; color:#FFFFFF; font-family:Helvetica, Arial, sans-serif; font-size:16px; font-weight:bold; padding-top:10px; padding-bottom:10px; text-align:center;'>February </td></tr><tr><td align='center' valign='top' style='color:#2C9AB7; font-family:Helvetica, Arial, sans-serif; font-size:60px; font-weight:bold; line-height:100%; padding-top:20px; padding-bottom:20px; text-align:center;'>3</td></tr></table></td></tr</table></body></html>";var message = {   text:    "Do not respond to this mail it is  for just testing purpose",    from:    "rajesh seendripu<seendripu.rajesh@gmail.com>",    to:      "rajesh.cme123@gmail.com,ashoksanju333@gmail.com",   cc:      "",   subject: "Testing my code for sending html email",   attachment:    [      {data:msg, alternative:true},      {path:"C:/Users/Admin/Desktop/file/rj.html", type:"application/html", name:"rj.html"},      {path:"C:/Users/Admin/Desktop/file/index.html", type:"application/html", name:"profile.html"}   ]};// send the message and get a callback with an error or details of the message that was sentserver.send(message, function(err, message) { console.log(err || message);if(!err)   res.send('done'); });});module.exports = router;
>>>>>>> 345c6492e86dfaea09cb270cc52b7970b2c40778
